# 1. Define rate limit zones at HTTP level (top of config)
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=static_limit:10m rate=500r/m;

server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    # 2. Apply rate limiting to API routes
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://backend:8000;  # Assuming Django runs on port 8000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # 3. Slightly higher limits for static assets
    location /assets/ {
        limit_req zone=static_limit burst=50 nodelay;
        try_files $uri =404;
        expires 30d;
        add_header Cache-Control "public";
    }

    # 4. Basic protection for all other requests
    location / {
        limit_req zone=api_limit burst=10;
        try_files $uri /index.html;
    }

    # 5. Special protection for sensitive paths
    location ~* ^/(admin|wp-login|phpmyadmin) {
        limit_req zone=api_limit burst=5;
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    error_page 404 /index.html;
    
    # 6. Global rate limiting fallback
    limit_req_status 429;
}