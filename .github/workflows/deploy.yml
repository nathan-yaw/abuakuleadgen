name: Deploy to Elastic Beanstalk

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build and Deploy to AWS EB
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      EBS_APP_NAME: ${{ secrets.EBS_APP_NAME }}
      EBS_ENV_NAME: ${{ secrets.EBS_ENV_NAME }}
      FRONTEND_REPO: leadgen-frontend
      BACKEND_REPO: leadgen-backend
      COMMIT_SHA: ${{ github.sha }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Python & Pip
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip

      - name: Install AWS EB CLI
        run: |
          pip3 install --upgrade pip
          pip3 install awsebcli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build & Push Frontend Image
        run: |
          docker build -t $FRONTEND_REPO ./leadGen-frontend
          docker tag $FRONTEND_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO:${COMMIT_SHA}
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO:${COMMIT_SHA}

      - name: Build & Push Backend Image
        run: |
          docker build -t $BACKEND_REPO ./lead_gen_api
          docker tag $BACKEND_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO:${COMMIT_SHA}
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO:${COMMIT_SHA}

      - name: Generate Dockerrun.aws.json
        run: |
          cat > Dockerrun.aws.json <<EOL
          {
            "AWSEBDockerrunVersion": 2,
            "containerDefinitions": [
              {
                "name": "frontend",
                "image": "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${FRONTEND_REPO}:${COMMIT_SHA}",
                "essential": true,
                "memory": 256,
                "portMappings": [
                  {
                    "hostPort": 80,
                    "containerPort": 80
                  }
                ]
              },
              {
                "name": "backend",
                "image": "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${BACKEND_REPO}:${COMMIT_SHA}",
                "essential": true,
                "memory": 256,
                "portMappings": [
                  {
                    "hostPort": 8000,
                    "containerPort": 8000
                  }
                ]
              }
            ]
          }
          EOL

      - name: Zip Dockerrun for EB
        run: zip deploy.zip Dockerrun.aws.json
      - name: Ensure ECR repos exist
        run: |
          aws ecr describe-repositories --repository-names $FRONTEND_REPO || aws ecr create-repository --repository-name $FRONTEND_REPO
          aws ecr describe-repositories --repository-names $BACKEND_REPO || aws ecr create-repository --repository-name $BACKEND_REPO


      - name: Initialize EB CLI
        run: |
          eb init "${{ env.EBS_APP_NAME }}" \
            --platform "Multi-container Docker running on 64bit Amazon Linux 2" \
            --region "${{ env.AWS_REGION }}"

      - name: Set EB Environment
        run: eb use "${{ env.EBS_ENV_NAME }}"

      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy --staged --label "v-${{ github.run_number }}"
